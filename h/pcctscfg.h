/*
 * SOFTWARE RIGHTS
 *
 * We reserve no LEGAL rights to the Purdue Compiler Construction Tool
 * Set (PCCTS) -- PCCTS is in the public domain.  An individual or
 * company may do whatever they wish with source code distributed with
 * PCCTS or the code generated by PCCTS, including the incorporation of
 * PCCTS, or its output, into commerical software.
 *
 * We encourage users to develop software with PCCTS.  However, we do ask
 * that credit is given to us for developing PCCTS.  By "credit",
 * we mean that if you incorporate our source code into one of your
 * programs (commercial product, research project, or otherwise) that you
 * acknowledge this fact somewhere in the documentation, research report,
 * etc...  If you like PCCTS and have developed a nice tool with the
 * output, please mention that you developed it using PCCTS.  In
 * addition, we ask that this header remain intact in our source code.
 * As long as these guidelines are kept, we expect to continue enhancing
 * this system and expect to make other tools available as they are
 * completed.
 *
 * Used by PCCTS 1.33 (SORCERER 1.00B11 and up)
 * Terence Parr
 * Parr Research Corporation
 * with Purdue University and AHPCRC, University of Minnesota
 * 1989-2000
 */

/**
 * \file pcctscfg.h (formerly config.h) (for ANTLR, DLG, and SORCERER)
 *
 * This is a simple configuration file that doesn't have config stuff
 * in it, but it's a start.
 */

/* This file knows about the following ``environments''
  UNIX    (default)
  DOS     (use #define PC)
  MAC     (use #define MPW; has a few things for THINK C, Metrowerks)
    MS/C++  (MR14 Microsoft Visual C++ environment uses symbol _MSC_VER)

 */

/* should test __STDC__ for 1, but some compilers don't set value, just def */

#ifndef PCCTS_CONFIG_H
#define PCCTS_CONFIG_H


#ifndef __USE_PROTOS
#ifdef __STDC__
#define __USE_PROTOS
#endif
#ifdef __cplusplus
#define __USE_PROTOS
#endif
#endif

#ifdef PCCTS_USE_NAMESPACE_STD
#define PCCTS_NAMESPACE_STD     namespace std {}; using namespace std;
#else
#define PCCTS_NAMESPACE_STD
#endif

#include "pccts_stdio.h"
#include "pccts_stdlib.h"

/* largest file name size */

#ifdef _MAX_PATH
#define MaxFileName   _MAX_PATH /* MR9 RJV: MAX_PATH defined in stdlib.h (MSVC++ 5.0) */
#else
#define MaxFileName   300
#endif


#define ATOKEN_H      "AToken.h"
#define ATOKPTR_H     "ATokPtr.h"
#define ATOKPTR_IMPL_H    "ATokPtrImpl.h"
#define ATOKENBUFFER_H    "ATokenBuffer.h"
#define ATOKENBUFFER_C    "ATokenBuffer.cpp"
#define ATOKENSTREAM_H    "ATokenStream.h"
#define APARSER_H     "AParser.h"
#define APARSER_C     "AParser.cpp"
#define ASTBASE_H     "ASTBase.h"
#define ASTBASE_C       "ASTBase.cpp"
#define PCCTSAST_C      "PCCTSAST.cpp"
#define LIST_C        "List.cpp"
#define DLEXERBASE_H    "DLexerBase.h"
#define DLEXERBASE_C    "DLexerBase.cpp"
#define DLEXER_H      "DLexer.h"
#define STREESUPPORT_C    "STreeSupport.cpp"

/* SORCERER Stuff */

#define STPARSER_H      "STreeParser.h"
#define STPARSER_C      "STreeParser.cpp"

#define CPP_FILE_SUFFIX   ".cpp"
#define CPP_FILE_SUFFIX_NO_DOT  "cpp"
#define OBJ_FILE_SUFFIX   ".o"

/* User may redefine how line information looks */     /* make it #line MR7 */
/* MR21 Use #ifndef */

#ifndef LineInfoFormatStr
#define LineInfoFormatStr "#line %d \"%s\"\n"
#endif

#ifdef MPW                      /* Macintosh Programmer's Workshop */
#define ErrHdr "File \"%s\"; Line %d #"
#else
#ifdef _MSC_VER                 /* MR14 Microsoft Visual C++ environment */
#define ErrHdr "%s(%d) :"
#else
#define ErrHdr "%s, line %d:"   /* default */
#endif
#endif

/* must assume old K&R cpp here, can't use #if defined(..)... */

#define TopDirectory  "."
#define DirectorySymbol "/"
#define OutputDirectoryOption "Directory where all output files should go (default=\".\")"

#ifdef MPW
#define DAWDLE  SpinCursor(1)
#else
#define DAWDLE
#endif


#ifndef TRUE
#define TRUE 1
#endif
#ifndef FALSE
#define FALSE 0
#endif

#if defined(VAXC) || defined(__VMS)
#include <ssdef.h>
#define PCCTS_EXIT_SUCCESS 1
#define PCCTS_EXIT_FAILURE SS$_ABORT
#define zzDIE   return SS$_ABORT;
#define zzDONE  return 1;

#else /* !VAXC and !__VMS */

#define PCCTS_EXIT_SUCCESS 0
#define PCCTS_EXIT_FAILURE 1
#define zzDIE   return 1;
#define zzDONE  return 0;

#endif

#ifdef USER_ZZMODE_STACK
# ifndef ZZSTACK_MAX_MODE
#  define  ZZSTACK_MAX_MODE 32
# endif
# define  ZZMAXSTK (ZZSTACK_MAX_MODE * 2)
#endif

#ifndef DllExportPCCTS
#define DllExportPCCTS
#endif

#ifdef __USE_PROTOS
#ifndef PCCTS_USE_STDARG
#define PCCTS_USE_STDARG
#endif
#endif

#ifdef __STDC__
#ifndef PCCTS_USE_STDARG
#define PCCTS_USE_STDARG
#endif
#endif

#ifdef __cplusplus
#ifndef PCCTS_USE_STDARG
#define PCCTS_USE_STDARG
#endif
#endif

#ifdef _MSC_VER
/*Turn off the warnings for:
  unreferenced inline/local function has been removed
*/
#pragma warning(disable : 4514)
/* function not expanded */
#pragma warning(disable : 4710)
#endif

#endif
